{{- if .Values.features.emailNotifications.enabled }}
{{- include "oc.basicServiceTemplates" (dict "scope" . "appName" "appNameNotifications" "appNameSuffix" "") -}}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: notifications-daily-notifications
  namespace: {{ template "oc.namespace" . }}
  labels:
    {{- include "oc.labels" . | nindent 4 }}
spec:
  schedule: {{ .Values.features.emailNotifications.summary.daily.schedule | quote }}
  {{- with .Values.features.emailNotifications.summary.daily.timezone }}
  timeZone: {{ . | quote }}
  {{- end }}
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: {{ .Values.features.emailNotifications.summary.daily.startingDeadlineSeconds }}
  suspend: {{ not .Values.features.emailNotifications.summary.daily.enabled }}
  jobTemplate:
    spec:
      parallelism: 1
      ttlSecondsAfterFinished: 86400
      template:
        metadata:
          labels:
            app: notifications-daily-notifications
            {{- include "oc.labels" . | nindent 12 }}
        spec:
          restartPolicy: Never
          {{- include "oc.securityContextAndtopologySpreadConstraints" . | nindent 10 }}
          {{- include "oc.priorityClassName" $.jobPriorityClassName | nindent 10 }}
          {{- include "oc.hostAliases" $ | nindent 10 }}
          nodeSelector: {{ toYaml $.jobNodeSelector | nindent 12 }}
          containers:
            - name: notifications-daily-notifications
              {{- include "oc.image" . | nindent 14 }}
              command: ["opencloud"]
              args: ["notifications", "send-email", "--daily"]
              securityContext:
                runAsNonRoot: true
                runAsUser: {{ .Values.securityContext.runAsUser }}
                runAsGroup: {{ .Values.securityContext.runAsGroup }}
                readOnlyRootFilesystem: true
              env:
                {{- include "oc.serviceRegistry" . | nindent 16 }}
                {{- include "oc.events" . | nindent 16 }}
                # logging
                - name: NOTIFICATIONS_LOG_COLOR
                  value: {{ .Values.logging.color | quote }}
                - name: NOTIFICATIONS_LOG_LEVEL
                  value: {{ .Values.logging.level | quote }}
                - name: NOTIFICATIONS_PRETTY
                  value: {{ .Values.logging.pretty | quote }}

                - name: NOTIFICATIONS_SMTP_SENDER #TODO: only needed to satisfy config checks!?
                  value: {{ .Values.features.emailNotifications.smtp.sender | quote }}

              resources: {{ toYaml .jobResources | nindent 16 }}

              volumeMounts:
                - name: tmp-volume
                  mountPath: /tmp
                - name: messaging-system-ca
                  mountPath: /etc/opencloud/messaging-system-ca
                  readOnly: true
                {{- include "oc.caPath" $ | nindent 16 }}

          {{- include "oc.imagePullSecrets" $ | nindent 10 }}
          volumes:
            - name: tmp-volume
              emptyDir: {}
            - name: messaging-system-ca
              {{ if and (.Values.messagingSystem.external.enabled) (not .Values.messagingSystem.external.tls.certTrusted) }}
              secret:
                secretName: {{ include "secrets.messagingSystemCASecret" . }}
              {{ else }}
              emptyDir: {}
              {{ end }}
            {{- include "oc.caVolume" $ | nindent 12}}

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: notifications-weekly-notifications
  namespace: {{ template "oc.namespace" . }}
  labels:
    {{- include "oc.labels" . | nindent 4 }}
spec:
  schedule: {{ .Values.features.emailNotifications.summary.weekly.schedule | quote }}
  {{- with .Values.features.emailNotifications.summary.weekly.timezone }}
  timeZone: {{ . | quote }}
  {{- end }}
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: {{ .Values.features.emailNotifications.summary.weekly.startingDeadlineSeconds }}
  suspend: {{ not .Values.features.emailNotifications.summary.weekly.enabled }}
  jobTemplate:
    spec:
      parallelism: 1
      ttlSecondsAfterFinished: 86400
      template:
        metadata:
          labels:
            app: notifications-weekly-notifications
            {{- include "oc.labels" . | nindent 12 }}
        spec:
          restartPolicy: Never
          {{- include "oc.securityContextAndtopologySpreadConstraints" . | nindent 10 }}
          {{- include "oc.priorityClassName" $.jobPriorityClassName | nindent 10 }}
          {{- include "oc.hostAliases" $ | nindent 10 }}
          nodeSelector: {{ toYaml $.jobNodeSelector | nindent 12 }}
          containers:
            - name: notifications-weekly-notifications
              {{- include "oc.image" . | nindent 14 }}
              command: ["opencloud"]
              args: ["notifications", "send-email", "--weekly"]
              securityContext:
                runAsNonRoot: true
                runAsUser: {{ .Values.securityContext.runAsUser }}
                runAsGroup: {{ .Values.securityContext.runAsGroup }}
                readOnlyRootFilesystem: true
              env:
                {{- include "oc.serviceRegistry" . | nindent 16 }}
                {{- include "oc.events" . | nindent 16 }}
                # logging
                - name: NOTIFICATIONS_LOG_COLOR
                  value: {{ .Values.logging.color | quote }}
                - name: NOTIFICATIONS_LOG_LEVEL
                  value: {{ .Values.logging.level | quote }}
                - name: NOTIFICATIONS_PRETTY
                  value: {{ .Values.logging.pretty | quote }}

                - name: NOTIFICATIONS_SMTP_SENDER #TODO: only needed to satisfy config checks!?
                  value: {{ .Values.features.emailNotifications.smtp.sender | quote }}

              resources: {{ toYaml .jobResources | nindent 16 }}

              volumeMounts:
                - name: tmp-volume
                  mountPath: /tmp
                - name: messaging-system-ca
                  mountPath: /etc/opencloud/messaging-system-ca
                  readOnly: true
                {{- include "oc.caPath" $ | nindent 16 }}

          {{- include "oc.imagePullSecrets" $ | nindent 10 }}
          volumes:
            - name: tmp-volume
              emptyDir: {}
            - name: messaging-system-ca
              {{ if and (.Values.messagingSystem.external.enabled) (not .Values.messagingSystem.external.tls.certTrusted) }}
              secret:
                secretName: {{ include "secrets.messagingSystemCASecret" . }}
              {{ else }}
              emptyDir: {}
              {{ end }}
            {{- include "oc.caVolume" $ | nindent 12}}

{{- end }}
